
AWSTemplateFormatVersion: "2010-09-09"

Description: >
    Creating EC2 Instance using parameters and intrinsic functions


Parameters:
  SelectKey:
    Description: Please select available key pair
    Type: 'AWS::EC2::KeyPair::KeyName'
  
  SelectInstance:
    Description: Only the following intance types are available
    Type: String
    Default: "t3.medium"
    AllowedValues:
      - t3.medium
      - c5.large

  VpcCidrRange:
    Description: Select vpc cidr range
    Type: CommaDelimitedList
    Default: "192.0.0.0/16, 10.0.0.0/16, 172.0.0.0/16"
  
  SubnetCidrRange:
    Description: Select subnet cidr range
    Type: CommaDelimitedList
    Default: "192.0.172.0/24, 10.0.54.0/24, 172.0.12.0/24"

Resources:
  DevVpc:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Select [ 0, !Ref VpcCidrRange ]
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: stack
          Value: development
  

  DevSubnetPublic:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: 
        Fn::Select:
          - 0
          - Fn::GetAZs:
              Ref: 'AWS::Region'
      CidrBlock: !Select [ 0, !Ref SubnetCidrRange ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: stack
          Value: development
      VpcId: !Ref DevVpc

  
  DevInternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: stack
          Value: development

  
  DevIGWAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      InternetGatewayId: !GetAtt DevInternetGateway.InternetGatewayId
      VpcId: !Ref DevVpc

  
  DevPublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      Tags: 
        - Key: stack
          Value: development
      VpcId: !Ref DevVpc

  
  DevPublicRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !GetAtt DevInternetGateway.InternetGatewayId
      RouteTableId: !GetAtt DevPublicRouteTable.RouteTableId

  
  DevSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !GetAtt DevPublicRouteTable.RouteTableId
      SubnetId: !Ref DevSubnetPublic


  DevNewInstance:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: "ami-079b5e5b3971bd10d"
      InstanceType: !Ref SelectInstance
      KeyName: !Ref SelectKey
      AvailabilityZone: !Select
        - 0
        - !GetAZs
          Ref: 'AWS::Region'
      SubnetId: !Ref DevSubnetPublic
      SecurityGroupIds: 
        - !GetAtt DevNewSecurityGroup.GroupId
      


  DevNewSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: "DevNewInstance security group"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8080'
          ToPort: '8080'
          CidrIp: 0.0.0.0/0
      VpcId: !Ref DevVpc


  DevElasticIp:
    Type: 'AWS::EC2::EIP'
    Properties:
      InstanceId: !Ref DevNewInstance